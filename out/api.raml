#%RAML 1.0
title: default title
description: |
  <h2>default title</h2>
  <p>
  Example description of the document.
  <p>
  Important: this service doesn't support the "self-assisted" customer point of view, so, it does not filter
  data based on customer's authorization

version: v1
(project):
    group: com.mcs
    artifact: usermcs
    name: Usermcs
mediaType: application/json
protocols:
  - HTTP
  - HTTPS
baseUri: 'http://{host}:{port}/localhost/Users/{version}'

baseUriParameters:
  host:
    type: string
  port:
    type: integer

uses:
  filterType: ./traits/filter_type.raml
  errorWarning: ./libraries/error_warning.raml
  
  UsersGet: ./types/Users_get.raml
  UserGet: ./types/User_get.raml
  UsersPost: ./types/Users_post.raml
  UsersPostId: ./types/Users_postId.raml
  UsersPut: ./types/Users_put.raml
  UsersPutId: ./types/Users_putId.raml
  

  sortable: ./traits/sortable.raml
  paginatedContent: ./traits/paginated-content.raml
  viewable: ./traits/viewable.raml
  expandable: ./traits/expandable.raml
  simplifiable: ./traits/simplifiable.raml
  base: ./types/base.raml

resourceTypes:
  simple_colleccion: !include resourceTypesMCS/simple_collection.raml
  static_collection: !include resourceTypesMCS/static_collection.raml
  item: !include resourceTypesMCS/item.raml
 
/users:
  (entity): base.User
  type: { simple_colleccion: { "baseUri": 'http://{host}:{port}/localhost/Users/{version}' } }
  description: |
    
  get:
    description: |
  
    is:
      [
        filterType.TextContains: {attribute : name, required: false},
        
        sortable.SortCriteria: {fields: contact_date_time},
        simplifiable.SimplificationCriteria: {fields : client_id | contact_date | reference},
        paginatedContent.PaginatedContent
      ]
    responses:
      200:
        description: |
          The request was successfully
        body:
          application/json:
            type: UsersGet.UsersGetData


  post:
      body:
          application/json:
            description:  Customer request to create
            type: UsersPost.UsersPostData
      responses:
       201:
         description: |
            The request was accepted.
         body:
          application/json:
                  type: UserGet.UserGetData
       405:
         description: |
            Invalid Parameters
       409:
         description: |
            There is already a transfer request created with the channel reference number

  /{user_id}:
    type:  { item : { "resourceId" : 'user_id' } }
    (entity): base.User
    get:
      description: |
        Gets the request associated with identified as part the url.
      responses:
        200:
          description: |
            Users Found
          body:
            application/json:
              type:  UserGet.UserGetData
        400:
          description: |
            the request has an incorrect format
        404:
          description: |
              Resource not found
    put:
      description: |
        Update Users
      body:
          application/json:
            type: UsersPut.UsersPutData
      responses:
        200:
          description: |
            The request was update successfully
          body:
            application/json:
              type:  UserGet.UserGetData
        400:
          description: |
              The request has an incorrect format

    delete:
      description: |
              Request to remove Customers
      responses:
        200:
          description:  |
              The request has bee successfull
        404:
          description: |
              There is no transfer request associated with the specified identifier
